name: Playwright Suite Tests

on:
  workflow_dispatch:
    inputs:
      suite:
        description: 'Select the test suite to run'
        required: true
        type: choice
        default: 'Suite1'
        options:
          - Suite1
          - Suite2
          - Suite3
          - Suite4
          - All
      browser:
        description: 'Select the browser to run on'
        required: true
        type: choice
        default: 'chromium'
        options:
          - chromium
          - firefox
          - webkit
          - All

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - suite: Suite1
          - suite: Suite2
          - suite: Suite3
          - suite: Suite4
    if: ${{ github.event.inputs.suite == 'All' || github.event.inputs.suite == matrix.suite }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Define suite specs
        id: define_suite
        run: |
          case "${{ matrix.suite }}" in
            "Suite1")
              SPECS="tests/automationDemoSite.spec.ts tests/dynamicTablePDF.spec.ts"
              ;;
            "Suite2")
              SPECS="tests/example.spec.ts tests/playgpdf.spec.ts"
              ;;
            "Suite3")
              SPECS="tests/playgrounddoc.spec.ts tests/playgroundDynamic.spec.ts"
              ;;
            "Suite4")
              SPECS="tests/playgroundIMG.spec.ts tests/qaPlayground.spec.ts tests/qaPlaygroundDemoSite.spec.ts tests/screener.spec.ts"
              ;;
          esac

          echo "suite_specs=$SPECS" >> $GITHUB_OUTPUT
          echo "Selected Suite: ${{ matrix.suite }}"
          echo "Specs: $SPECS"

      - name: Run Playwright tests
        run: |
          if [ "${{ github.event.inputs.browser }}" = "All" ]; then
            npx playwright test ${{ steps.define_suite.outputs.suite_specs }} --reporter=line,allure-playwright
          else
            npx playwright test ${{ steps.define_suite.outputs.suite_specs }} --project=${{ github.event.inputs.browser }} --reporter=line,allure-playwright
          fi

      - name: Generate Allure report
        if: always()
        run: |
          npx allure generate allure-results --clean -o allure-report

      - name: Upload suite-specific Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-${{ matrix.suite }}
          path: allure-report
          retention-days: 30

  combine-reports:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event.inputs.suite == 'All' }}
    steps:
      - name: Download all suite reports
        uses: actions/download-artifact@v4
        with:
          path: combined-reports

      - name: Create combined dashboard
        run: |
          mkdir -p final-dashboard
          DASHBOARD="final-dashboard/index.html"

          echo "<html><head><title>Allure Suite Dashboard</title></head><body>" >> $DASHBOARD
          echo "<h1>✅ Playwright Allure Suite Dashboard</h1>" >> $DASHBOARD
          echo "<p>Generated on $(date)</p><ul>" >> $DASHBOARD

          for dir in combined-reports/allure-*; do
            SUITE_NAME=$(basename "$dir" | cut -d'-' -f2)
            REPORT_PATH="$dir/index.html"
            if [ -f "$REPORT_PATH" ]; then
              echo "<li><a href='$REPORT_PATH'>Allure Report for $SUITE_NAME</a></li>" >> $DASHBOARD
            else
              echo "<li>$SUITE_NAME – Report missing</li>" >> $DASHBOARD
            fi
          done

          echo "</ul></body></html>" >> $DASHBOARD

      - name: Upload combined dashboard
        uses: actions/upload-artifact@v4
        with:
          name: combined-dashboard
          path: final-dashboard
          retention-days: 30
